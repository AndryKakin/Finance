// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProductContract.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Products {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProductContract {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProductContract() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm9kdWN0Q29udHJhY3QucHJvdG8SCHByb2R1Y3RzIkgKB1Byb2R1Y3QS", 
            "CgoCSWQYASABKAMSDAoETmFtZRgCIAEoCRITCgtEZXNjcmlwdGlvbhgDIAEo", 
            "CRIOCgZCaXRtYXAYBCABKAwiNwoQUHJvZHVjdHNSZXNwb25zZRIjCghQcm9k", 
            "dWN0cxgBIAMoCzIRLnByb2R1Y3RzLlByb2R1Y3QiMgoOUmVzdWx0UmVzcG9u", 
            "c2USIAoGU3RhdHVzGAEgASgOMhAucHJvZHVjdHMuU3RhdHVzIg8KDUdldEFs", 
            "bFJlcXVlc3QqHAoGU3RhdHVzEgYKAk9rEAASCgoGRmFpbGVkEAEyjgIKDlBy", 
            "b2R1Y3RTZXJ2aWNlEjsKCkFkZFByb2R1Y3QSES5wcm9kdWN0cy5Qcm9kdWN0", 
            "GhgucHJvZHVjdHMuUmVzdWx0UmVzcG9uc2UiABI+Cg1VcGRhdGVQcm9kdWN0", 
            "EhEucHJvZHVjdHMuUHJvZHVjdBoYLnByb2R1Y3RzLlJlc3VsdFJlc3BvbnNl", 
            "IgASPgoNRGVsZXRlUHJvZHVjdBIRLnByb2R1Y3RzLlByb2R1Y3QaGC5wcm9k", 
            "dWN0cy5SZXN1bHRSZXNwb25zZSIAEj8KBkdldEFsbBIXLnByb2R1Y3RzLkdl", 
            "dEFsbFJlcXVlc3QaGi5wcm9kdWN0cy5Qcm9kdWN0c1Jlc3BvbnNlIgBCPQoQ", 
            "aW8uZ3JwYy5leGFtcGxlc1oIcHJvZHVjdHOiAgNITFeqAhhHb29nbGUuUHJv", 
            "dG9idWYuUHJvZHVjdHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::Google.Protobuf.Products.Status), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.Products.Product), new[]{ "Id", "Name", "Description", "Bitmap" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.Products.ProductsResponse), new[]{ "Products" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.Products.ResultResponse), new[]{ "Status" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.Products.GetAllRequest), null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    Ok = 0,
    Failed = 1,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Product : pb::IMessage<Product> {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Products.ProductContract.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Product(Product other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      bitmap_ = other.bitmap_;
    }

    public Product Clone() {
      return new Product(this);
    }

    public const int IdFieldNumber = 1;
    private long id_;
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public const int NameFieldNumber = 2;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    public string Description {
      get { return description_; }
      set {
        description_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int BitmapFieldNumber = 4;
    private pb::ByteString bitmap_ = pb::ByteString.Empty;
    public pb::ByteString Bitmap {
      get { return bitmap_; }
      set {
        bitmap_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Bitmap != other.Bitmap) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Bitmap.Length != 0) hash ^= Bitmap.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Bitmap.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Bitmap);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Bitmap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bitmap);
      }
      return size;
    }

    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Bitmap.Length != 0) {
        Bitmap = other.Bitmap;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Bitmap = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProductsResponse : pb::IMessage<ProductsResponse> {
    private static readonly pb::MessageParser<ProductsResponse> _parser = new pb::MessageParser<ProductsResponse>(() => new ProductsResponse());
    public static pb::MessageParser<ProductsResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Products.ProductContract.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ProductsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ProductsResponse(ProductsResponse other) : this() {
      products_ = other.products_.Clone();
    }

    public ProductsResponse Clone() {
      return new ProductsResponse(this);
    }

    public const int ProductsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Products.Product> _repeated_products_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Products.Product.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Products.Product> products_ = new pbc::RepeatedField<global::Google.Protobuf.Products.Product>();
    public pbc::RepeatedField<global::Google.Protobuf.Products.Product> Products {
      get { return products_; }
    }

    public override bool Equals(object other) {
      return Equals(other as ProductsResponse);
    }

    public bool Equals(ProductsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!products_.Equals(other.products_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= products_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      products_.WriteTo(output, _repeated_products_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += products_.CalculateSize(_repeated_products_codec);
      return size;
    }

    public void MergeFrom(ProductsResponse other) {
      if (other == null) {
        return;
      }
      products_.Add(other.products_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            products_.AddEntriesFrom(input, _repeated_products_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResultResponse : pb::IMessage<ResultResponse> {
    private static readonly pb::MessageParser<ResultResponse> _parser = new pb::MessageParser<ResultResponse>(() => new ResultResponse());
    public static pb::MessageParser<ResultResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Products.ProductContract.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ResultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ResultResponse(ResultResponse other) : this() {
      status_ = other.status_;
    }

    public ResultResponse Clone() {
      return new ResultResponse(this);
    }

    public const int StatusFieldNumber = 1;
    private global::Google.Protobuf.Products.Status status_ = global::Google.Protobuf.Products.Status.Ok;
    public global::Google.Protobuf.Products.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ResultResponse);
    }

    public bool Equals(ResultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Google.Protobuf.Products.Status.Ok) hash ^= Status.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Google.Protobuf.Products.Status.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Status != global::Google.Protobuf.Products.Status.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    public void MergeFrom(ResultResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Google.Protobuf.Products.Status.Ok) {
        Status = other.Status;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Google.Protobuf.Products.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllRequest : pb::IMessage<GetAllRequest> {
    private static readonly pb::MessageParser<GetAllRequest> _parser = new pb::MessageParser<GetAllRequest>(() => new GetAllRequest());
    public static pb::MessageParser<GetAllRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Products.ProductContract.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetAllRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetAllRequest(GetAllRequest other) : this() {
    }

    public GetAllRequest Clone() {
      return new GetAllRequest(this);
    }

    public override bool Equals(object other) {
      return Equals(other as GetAllRequest);
    }

    public bool Equals(GetAllRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
    }

    public int CalculateSize() {
      int size = 0;
      return size;
    }

    public void MergeFrom(GetAllRequest other) {
      if (other == null) {
        return;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
