// Code generated by protoc-gen-go.
// source: PurchaseContract.proto
// DO NOT EDIT!

/*
Package purchases is a generated protocol buffer package.

It is generated from these files:
	PurchaseContract.proto

It has these top-level messages:
	Purchase
	PurchasesResponse
	ResultResponse
	GetAllRequest
*/
package purchases

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Status int32

const (
	Status_Ok     Status = 0
	Status_Failed Status = 1
)

var Status_name = map[int32]string{
	0: "Ok",
	1: "Failed",
}
var Status_value = map[string]int32{
	"Ok":     0,
	"Failed": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Purchase struct {
	Id         int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	FkCurrency int64 `protobuf:"varint,2,opt,name=FkCurrency" json:"FkCurrency,omitempty"`
}

func (m *Purchase) Reset()                    { *m = Purchase{} }
func (m *Purchase) String() string            { return proto.CompactTextString(m) }
func (*Purchase) ProtoMessage()               {}
func (*Purchase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PurchasesResponse struct {
	Purchases []*Purchase `protobuf:"bytes,1,rep,name=Purchases" json:"Purchases,omitempty"`
}

func (m *PurchasesResponse) Reset()                    { *m = PurchasesResponse{} }
func (m *PurchasesResponse) String() string            { return proto.CompactTextString(m) }
func (*PurchasesResponse) ProtoMessage()               {}
func (*PurchasesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PurchasesResponse) GetPurchases() []*Purchase {
	if m != nil {
		return m.Purchases
	}
	return nil
}

type ResultResponse struct {
	Status Status `protobuf:"varint,1,opt,name=Status,enum=purchases.Status" json:"Status,omitempty"`
}

func (m *ResultResponse) Reset()                    { *m = ResultResponse{} }
func (m *ResultResponse) String() string            { return proto.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()               {}
func (*ResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetAllRequest struct {
}

func (m *GetAllRequest) Reset()                    { *m = GetAllRequest{} }
func (m *GetAllRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllRequest) ProtoMessage()               {}
func (*GetAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Purchase)(nil), "purchases.Purchase")
	proto.RegisterType((*PurchasesResponse)(nil), "purchases.PurchasesResponse")
	proto.RegisterType((*ResultResponse)(nil), "purchases.ResultResponse")
	proto.RegisterType((*GetAllRequest)(nil), "purchases.GetAllRequest")
	proto.RegisterEnum("purchases.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for PriceService service

type PriceServiceClient interface {
	Add(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error)
	Update(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error)
	Delete(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*PurchasesResponse, error)
}

type priceServiceClient struct {
	cc *grpc.ClientConn
}

func NewPriceServiceClient(cc *grpc.ClientConn) PriceServiceClient {
	return &priceServiceClient{cc}
}

func (c *priceServiceClient) Add(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := grpc.Invoke(ctx, "/purchases.PriceService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceServiceClient) Update(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := grpc.Invoke(ctx, "/purchases.PriceService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceServiceClient) Delete(ctx context.Context, in *Purchase, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := grpc.Invoke(ctx, "/purchases.PriceService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*PurchasesResponse, error) {
	out := new(PurchasesResponse)
	err := grpc.Invoke(ctx, "/purchases.PriceService/GetAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PriceService service

type PriceServiceServer interface {
	Add(context.Context, *Purchase) (*ResultResponse, error)
	Update(context.Context, *Purchase) (*ResultResponse, error)
	Delete(context.Context, *Purchase) (*ResultResponse, error)
	GetAll(context.Context, *GetAllRequest) (*PurchasesResponse, error)
}

func RegisterPriceServiceServer(s *grpc.Server, srv PriceServiceServer) {
	s.RegisterService(&_PriceService_serviceDesc, srv)
}

func _PriceService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Purchase)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PriceServiceServer).Add(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _PriceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Purchase)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PriceServiceServer).Update(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _PriceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Purchase)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PriceServiceServer).Delete(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _PriceService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PriceServiceServer).GetAll(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _PriceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "purchases.PriceService",
	HandlerType: (*PriceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _PriceService_Add_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PriceService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PriceService_Delete_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _PriceService_GetAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4b, 0x02, 0x41,
	0x14, 0xc7, 0x75, 0x17, 0x96, 0x7c, 0x95, 0xe9, 0x04, 0xa1, 0xe2, 0xa1, 0xf6, 0x10, 0xe2, 0x61,
	0x0e, 0x7a, 0x08, 0xea, 0x10, 0x6a, 0x68, 0x41, 0x90, 0x28, 0x11, 0x74, 0x1b, 0x77, 0x5f, 0x26,
	0x4e, 0xce, 0x34, 0x3f, 0xa2, 0xce, 0xfd, 0x27, 0x1d, 0xfb, 0x2b, 0x1b, 0xb5, 0xd5, 0x15, 0x3c,
	0x79, 0x1a, 0xe6, 0xfb, 0xde, 0xe7, 0x3b, 0xdf, 0x99, 0x79, 0x70, 0xd2, 0xb7, 0x2a, 0x7a, 0x65,
	0x1a, 0x3b, 0x62, 0x66, 0x14, 0x8b, 0x0c, 0x95, 0x4a, 0x18, 0x41, 0x72, 0xf2, 0x5f, 0xd7, 0x61,
	0x1d, 0xf6, 0x92, 0x26, 0x02, 0xe0, 0xdd, 0xc5, 0xa5, 0xec, 0x69, 0xb6, 0xe6, 0x13, 0xb7, 0xe9,
	0x4e, 0x3b, 0x56, 0x29, 0x9c, 0x45, 0x5f, 0x25, 0x6f, 0xae, 0x85, 0x57, 0x50, 0x4c, 0x7a, 0xf5,
	0x00, 0xb5, 0x14, 0x33, 0x07, 0x9d, 0x43, 0x6e, 0x25, 0x3a, 0xd6, 0xaf, 0xed, 0x37, 0x8e, 0xe9,
	0xca, 0x9f, 0x26, 0xb5, 0xb0, 0x09, 0x79, 0xc7, 0x58, 0x6e, 0x56, 0xe4, 0x19, 0x04, 0x43, 0xc3,
	0x8c, 0xd5, 0x8b, 0x23, 0xf3, 0x8d, 0x62, 0x0a, 0x5b, 0x16, 0xc2, 0x23, 0x38, 0xec, 0xa1, 0x69,
	0x71, 0x3e, 0xc0, 0x77, 0x8b, 0xda, 0xd4, 0xab, 0x09, 0x43, 0x02, 0xf0, 0x1e, 0xa6, 0x85, 0x8c,
	0xcb, 0x19, 0x74, 0xd9, 0x84, 0x63, 0x5c, 0xc8, 0x36, 0xbe, 0x3d, 0x38, 0xe8, 0xab, 0x49, 0x84,
	0x43, 0x54, 0x1f, 0x6e, 0x21, 0x17, 0xe0, 0xb7, 0xe2, 0x98, 0x6c, 0x0b, 0x54, 0x29, 0xa7, 0xc4,
	0xcd, 0x64, 0x61, 0x86, 0x5c, 0x42, 0xf0, 0x28, 0x63, 0x66, 0x70, 0x37, 0xf6, 0x06, 0x39, 0xee,
	0xc4, 0xb6, 0x21, 0x58, 0x5e, 0x98, 0x94, 0x52, 0x6d, 0x1b, 0x6f, 0x50, 0xa9, 0x6e, 0x71, 0xd5,
	0x6b, 0x8f, 0xf6, 0x35, 0x14, 0x26, 0x82, 0x8e, 0x95, 0x8c, 0x28, 0x7e, 0xb2, 0x37, 0xc9, 0x51,
	0x3f, 0xaf, 0x7f, 0xfc, 0xc7, 0xf3, 0x6f, 0xef, 0x9f, 0x7e, 0xbd, 0x72, 0x4f, 0x88, 0x31, 0x47,
	0xda, 0x9f, 0x4f, 0xc4, 0xc8, 0xbe, 0xac, 0x4d, 0x47, 0xc1, 0x62, 0x4a, 0x9a, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd5, 0xd9, 0x6d, 0x59, 0x3f, 0x02, 0x00, 0x00,
}
