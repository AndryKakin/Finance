// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PriceContract.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.prices {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PriceContract {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PriceContract() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcmljZUNvbnRyYWN0LnByb3RvEgZwcmljZXMiSQoFUHJpY2USCgoCSWQY", 
            "ASABKAMSEQoJRmtQcm9kdWN0GAIgASgDEhIKCkZrUHVyY2hhc2UYAyABKAMS", 
            "DQoFUHJpY2UYBSABKAEiLwoOUHJpY2VzUmVzcG9uc2USHQoGUHJpY2VzGAEg", 
            "AygLMg0ucHJpY2VzLlByaWNlIjAKDlJlc3VsdFJlc3BvbnNlEh4KBlN0YXR1", 
            "cxgBIAEoDjIOLnByaWNlcy5TdGF0dXMiDwoNR2V0QWxsUmVxdWVzdCocCgZT", 
            "dGF0dXMSBgoCT2sQABIKCgZGYWlsZWQQATLfAQoMUHJpY2VTZXJ2aWNlEi4K", 
            "A0FkZBINLnByaWNlcy5QcmljZRoWLnByaWNlcy5SZXN1bHRSZXNwb25zZSIA", 
            "EjEKBlVwZGF0ZRINLnByaWNlcy5QcmljZRoWLnByaWNlcy5SZXN1bHRSZXNw", 
            "b25zZSIAEjEKBkRlbGV0ZRINLnByaWNlcy5QcmljZRoWLnByaWNlcy5SZXN1", 
            "bHRSZXNwb25zZSIAEjkKBkdldEFsbBIVLnByaWNlcy5HZXRBbGxSZXF1ZXN0", 
            "GhYucHJpY2VzLlByaWNlc1Jlc3BvbnNlIgBCOQoQaW8uZ3JwYy5leGFtcGxl", 
            "c1oGcHJpY2VzogIDSExXqgIWR29vZ2xlLlByb3RvYnVmLnByaWNlc2IGcHJv", 
            "dG8z"));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::Google.Protobuf.prices.Status), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.prices.Price), new[]{ "Id", "FkProduct", "FkPurchase", "Price_" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.prices.PricesResponse), new[]{ "Prices" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.prices.ResultResponse), new[]{ "Status" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.prices.GetAllRequest), null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    Ok = 0,
    Failed = 1,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Price : pb::IMessage<Price> {
    private static readonly pb::MessageParser<Price> _parser = new pb::MessageParser<Price>(() => new Price());
    public static pb::MessageParser<Price> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.prices.PriceContract.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Price() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Price(Price other) : this() {
      id_ = other.id_;
      fkProduct_ = other.fkProduct_;
      fkPurchase_ = other.fkPurchase_;
      price_ = other.price_;
    }

    public Price Clone() {
      return new Price(this);
    }

    public const int IdFieldNumber = 1;
    private long id_;
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public const int FkProductFieldNumber = 2;
    private long fkProduct_;
    public long FkProduct {
      get { return fkProduct_; }
      set {
        fkProduct_ = value;
      }
    }

    public const int FkPurchaseFieldNumber = 3;
    private long fkPurchase_;
    public long FkPurchase {
      get { return fkPurchase_; }
      set {
        fkPurchase_ = value;
      }
    }

    public const int Price_FieldNumber = 5;
    private double price_;
    public double Price_ {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Price);
    }

    public bool Equals(Price other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FkProduct != other.FkProduct) return false;
      if (FkPurchase != other.FkPurchase) return false;
      if (Price_ != other.Price_) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (FkProduct != 0L) hash ^= FkProduct.GetHashCode();
      if (FkPurchase != 0L) hash ^= FkPurchase.GetHashCode();
      if (Price_ != 0D) hash ^= Price_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (FkProduct != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FkProduct);
      }
      if (FkPurchase != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FkPurchase);
      }
      if (Price_ != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Price_);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (FkProduct != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FkProduct);
      }
      if (FkPurchase != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FkPurchase);
      }
      if (Price_ != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    public void MergeFrom(Price other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.FkProduct != 0L) {
        FkProduct = other.FkProduct;
      }
      if (other.FkPurchase != 0L) {
        FkPurchase = other.FkPurchase;
      }
      if (other.Price_ != 0D) {
        Price_ = other.Price_;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            FkProduct = input.ReadInt64();
            break;
          }
          case 24: {
            FkPurchase = input.ReadInt64();
            break;
          }
          case 41: {
            Price_ = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PricesResponse : pb::IMessage<PricesResponse> {
    private static readonly pb::MessageParser<PricesResponse> _parser = new pb::MessageParser<PricesResponse>(() => new PricesResponse());
    public static pb::MessageParser<PricesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.prices.PriceContract.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PricesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PricesResponse(PricesResponse other) : this() {
      prices_ = other.prices_.Clone();
    }

    public PricesResponse Clone() {
      return new PricesResponse(this);
    }

    public const int PricesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.prices.Price> _repeated_prices_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.prices.Price.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.prices.Price> prices_ = new pbc::RepeatedField<global::Google.Protobuf.prices.Price>();
    public pbc::RepeatedField<global::Google.Protobuf.prices.Price> Prices {
      get { return prices_; }
    }

    public override bool Equals(object other) {
      return Equals(other as PricesResponse);
    }

    public bool Equals(PricesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!prices_.Equals(other.prices_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= prices_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      prices_.WriteTo(output, _repeated_prices_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += prices_.CalculateSize(_repeated_prices_codec);
      return size;
    }

    public void MergeFrom(PricesResponse other) {
      if (other == null) {
        return;
      }
      prices_.Add(other.prices_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            prices_.AddEntriesFrom(input, _repeated_prices_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResultResponse : pb::IMessage<ResultResponse> {
    private static readonly pb::MessageParser<ResultResponse> _parser = new pb::MessageParser<ResultResponse>(() => new ResultResponse());
    public static pb::MessageParser<ResultResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.prices.PriceContract.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ResultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ResultResponse(ResultResponse other) : this() {
      status_ = other.status_;
    }

    public ResultResponse Clone() {
      return new ResultResponse(this);
    }

    public const int StatusFieldNumber = 1;
    private global::Google.Protobuf.prices.Status status_ = global::Google.Protobuf.prices.Status.Ok;
    public global::Google.Protobuf.prices.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ResultResponse);
    }

    public bool Equals(ResultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Google.Protobuf.prices.Status.Ok) hash ^= Status.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Google.Protobuf.prices.Status.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Status != global::Google.Protobuf.prices.Status.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    public void MergeFrom(ResultResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Google.Protobuf.prices.Status.Ok) {
        Status = other.Status;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Google.Protobuf.prices.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllRequest : pb::IMessage<GetAllRequest> {
    private static readonly pb::MessageParser<GetAllRequest> _parser = new pb::MessageParser<GetAllRequest>(() => new GetAllRequest());
    public static pb::MessageParser<GetAllRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.prices.PriceContract.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetAllRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetAllRequest(GetAllRequest other) : this() {
    }

    public GetAllRequest Clone() {
      return new GetAllRequest(this);
    }

    public override bool Equals(object other) {
      return Equals(other as GetAllRequest);
    }

    public bool Equals(GetAllRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
    }

    public int CalculateSize() {
      int size = 0;
      return size;
    }

    public void MergeFrom(GetAllRequest other) {
      if (other == null) {
        return;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
