// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PurchaseContract.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.purchases {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PurchaseContract {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PurchaseContract() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQdXJjaGFzZUNvbnRyYWN0LnByb3RvEglwdXJjaGFzZXMiRAoLUHVjaGFz", 
            "ZUl0ZW0SEwoLRmtQcm9kdWN0SWQYASABKAMSEQoJRnVsbFByaWNlGAIgASgC", 
            "Eg0KBUNvdW50GAMgASgCImcKCFB1cmNoYXNlEgoKAklkGAEgASgDEhIKCkZr", 
            "Q3VycmVuY3kYAiABKAMSEAoIRGF0ZVRpbWUYAyABKAkSKQoJUHVyY2hhc2Vz", 
            "GAQgAygLMhYucHVyY2hhc2VzLlB1Y2hhc2VJdGVtIjsKEVB1cmNoYXNlc1Jl", 
            "c3BvbnNlEiYKCVB1cmNoYXNlcxgBIAMoCzITLnB1cmNoYXNlcy5QdXJjaGFz", 
            "ZSIzCg5SZXN1bHRSZXNwb25zZRIhCgZTdGF0dXMYASABKA4yES5wdXJjaGFz", 
            "ZXMuU3RhdHVzIg8KDUdldEFsbFJlcXVlc3QqHAoGU3RhdHVzEgYKAk9rEAAS", 
            "CgoGRmFpbGVkEAEyhgIKD1B1cmNoYXNlU2VydmljZRI3CgNBZGQSEy5wdXJj", 
            "aGFzZXMuUHVyY2hhc2UaGS5wdXJjaGFzZXMuUmVzdWx0UmVzcG9uc2UiABI6", 
            "CgZVcGRhdGUSEy5wdXJjaGFzZXMuUHVyY2hhc2UaGS5wdXJjaGFzZXMuUmVz", 
            "dWx0UmVzcG9uc2UiABI6CgZEZWxldGUSEy5wdXJjaGFzZXMuUHVyY2hhc2Ua", 
            "GS5wdXJjaGFzZXMuUmVzdWx0UmVzcG9uc2UiABJCCgZHZXRBbGwSGC5wdXJj", 
            "aGFzZXMuR2V0QWxsUmVxdWVzdBocLnB1cmNoYXNlcy5QdXJjaGFzZXNSZXNw", 
            "b25zZSIAQj8KEGlvLmdycGMuZXhhbXBsZXNaCXB1cmNoYXNlc6ICA0hMV6oC", 
            "GUdvb2dsZS5Qcm90b2J1Zi5wdXJjaGFzZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::Google.Protobuf.purchases.Status), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.purchases.PuchaseItem), new[]{ "FkProductId", "FullPrice", "Count" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.purchases.Purchase), new[]{ "Id", "FkCurrency", "DateTime", "Purchases" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.purchases.PurchasesResponse), new[]{ "Purchases" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.purchases.ResultResponse), new[]{ "Status" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::Google.Protobuf.purchases.GetAllRequest), null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    Ok = 0,
    Failed = 1,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PuchaseItem : pb::IMessage<PuchaseItem> {
    private static readonly pb::MessageParser<PuchaseItem> _parser = new pb::MessageParser<PuchaseItem>(() => new PuchaseItem());
    public static pb::MessageParser<PuchaseItem> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.purchases.PurchaseContract.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PuchaseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PuchaseItem(PuchaseItem other) : this() {
      fkProductId_ = other.fkProductId_;
      fullPrice_ = other.fullPrice_;
      count_ = other.count_;
    }

    public PuchaseItem Clone() {
      return new PuchaseItem(this);
    }

    public const int FkProductIdFieldNumber = 1;
    private long fkProductId_;
    public long FkProductId {
      get { return fkProductId_; }
      set {
        fkProductId_ = value;
      }
    }

    public const int FullPriceFieldNumber = 2;
    private float fullPrice_;
    public float FullPrice {
      get { return fullPrice_; }
      set {
        fullPrice_ = value;
      }
    }

    public const int CountFieldNumber = 3;
    private float count_;
    public float Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PuchaseItem);
    }

    public bool Equals(PuchaseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FkProductId != other.FkProductId) return false;
      if (FullPrice != other.FullPrice) return false;
      if (Count != other.Count) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (FkProductId != 0L) hash ^= FkProductId.GetHashCode();
      if (FullPrice != 0F) hash ^= FullPrice.GetHashCode();
      if (Count != 0F) hash ^= Count.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (FkProductId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FkProductId);
      }
      if (FullPrice != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FullPrice);
      }
      if (Count != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Count);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (FkProductId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FkProductId);
      }
      if (FullPrice != 0F) {
        size += 1 + 4;
      }
      if (Count != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    public void MergeFrom(PuchaseItem other) {
      if (other == null) {
        return;
      }
      if (other.FkProductId != 0L) {
        FkProductId = other.FkProductId;
      }
      if (other.FullPrice != 0F) {
        FullPrice = other.FullPrice;
      }
      if (other.Count != 0F) {
        Count = other.Count;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FkProductId = input.ReadInt64();
            break;
          }
          case 21: {
            FullPrice = input.ReadFloat();
            break;
          }
          case 29: {
            Count = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Purchase : pb::IMessage<Purchase> {
    private static readonly pb::MessageParser<Purchase> _parser = new pb::MessageParser<Purchase>(() => new Purchase());
    public static pb::MessageParser<Purchase> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.purchases.PurchaseContract.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Purchase() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Purchase(Purchase other) : this() {
      id_ = other.id_;
      fkCurrency_ = other.fkCurrency_;
      dateTime_ = other.dateTime_;
      purchases_ = other.purchases_.Clone();
    }

    public Purchase Clone() {
      return new Purchase(this);
    }

    public const int IdFieldNumber = 1;
    private long id_;
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public const int FkCurrencyFieldNumber = 2;
    private long fkCurrency_;
    public long FkCurrency {
      get { return fkCurrency_; }
      set {
        fkCurrency_ = value;
      }
    }

    public const int DateTimeFieldNumber = 3;
    private string dateTime_ = "";
    public string DateTime {
      get { return dateTime_; }
      set {
        dateTime_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int PurchasesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.purchases.PuchaseItem> _repeated_purchases_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.purchases.PuchaseItem.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.purchases.PuchaseItem> purchases_ = new pbc::RepeatedField<global::Google.Protobuf.purchases.PuchaseItem>();
    public pbc::RepeatedField<global::Google.Protobuf.purchases.PuchaseItem> Purchases {
      get { return purchases_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Purchase);
    }

    public bool Equals(Purchase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FkCurrency != other.FkCurrency) return false;
      if (DateTime != other.DateTime) return false;
      if(!purchases_.Equals(other.purchases_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (FkCurrency != 0L) hash ^= FkCurrency.GetHashCode();
      if (DateTime.Length != 0) hash ^= DateTime.GetHashCode();
      hash ^= purchases_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (FkCurrency != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FkCurrency);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateTime);
      }
      purchases_.WriteTo(output, _repeated_purchases_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (FkCurrency != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FkCurrency);
      }
      if (DateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateTime);
      }
      size += purchases_.CalculateSize(_repeated_purchases_codec);
      return size;
    }

    public void MergeFrom(Purchase other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.FkCurrency != 0L) {
        FkCurrency = other.FkCurrency;
      }
      if (other.DateTime.Length != 0) {
        DateTime = other.DateTime;
      }
      purchases_.Add(other.purchases_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            FkCurrency = input.ReadInt64();
            break;
          }
          case 26: {
            DateTime = input.ReadString();
            break;
          }
          case 34: {
            purchases_.AddEntriesFrom(input, _repeated_purchases_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PurchasesResponse : pb::IMessage<PurchasesResponse> {
    private static readonly pb::MessageParser<PurchasesResponse> _parser = new pb::MessageParser<PurchasesResponse>(() => new PurchasesResponse());
    public static pb::MessageParser<PurchasesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.purchases.PurchaseContract.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PurchasesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PurchasesResponse(PurchasesResponse other) : this() {
      purchases_ = other.purchases_.Clone();
    }

    public PurchasesResponse Clone() {
      return new PurchasesResponse(this);
    }

    public const int PurchasesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.purchases.Purchase> _repeated_purchases_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.purchases.Purchase.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.purchases.Purchase> purchases_ = new pbc::RepeatedField<global::Google.Protobuf.purchases.Purchase>();
    public pbc::RepeatedField<global::Google.Protobuf.purchases.Purchase> Purchases {
      get { return purchases_; }
    }

    public override bool Equals(object other) {
      return Equals(other as PurchasesResponse);
    }

    public bool Equals(PurchasesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!purchases_.Equals(other.purchases_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= purchases_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      purchases_.WriteTo(output, _repeated_purchases_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += purchases_.CalculateSize(_repeated_purchases_codec);
      return size;
    }

    public void MergeFrom(PurchasesResponse other) {
      if (other == null) {
        return;
      }
      purchases_.Add(other.purchases_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            purchases_.AddEntriesFrom(input, _repeated_purchases_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResultResponse : pb::IMessage<ResultResponse> {
    private static readonly pb::MessageParser<ResultResponse> _parser = new pb::MessageParser<ResultResponse>(() => new ResultResponse());
    public static pb::MessageParser<ResultResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.purchases.PurchaseContract.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ResultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ResultResponse(ResultResponse other) : this() {
      status_ = other.status_;
    }

    public ResultResponse Clone() {
      return new ResultResponse(this);
    }

    public const int StatusFieldNumber = 1;
    private global::Google.Protobuf.purchases.Status status_ = global::Google.Protobuf.purchases.Status.Ok;
    public global::Google.Protobuf.purchases.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ResultResponse);
    }

    public bool Equals(ResultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Google.Protobuf.purchases.Status.Ok) hash ^= Status.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Google.Protobuf.purchases.Status.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Status != global::Google.Protobuf.purchases.Status.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    public void MergeFrom(ResultResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Google.Protobuf.purchases.Status.Ok) {
        Status = other.Status;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Google.Protobuf.purchases.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllRequest : pb::IMessage<GetAllRequest> {
    private static readonly pb::MessageParser<GetAllRequest> _parser = new pb::MessageParser<GetAllRequest>(() => new GetAllRequest());
    public static pb::MessageParser<GetAllRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.purchases.PurchaseContract.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetAllRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetAllRequest(GetAllRequest other) : this() {
    }

    public GetAllRequest Clone() {
      return new GetAllRequest(this);
    }

    public override bool Equals(object other) {
      return Equals(other as GetAllRequest);
    }

    public bool Equals(GetAllRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
    }

    public int CalculateSize() {
      int size = 0;
      return size;
    }

    public void MergeFrom(GetAllRequest other) {
      if (other == null) {
        return;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
